<!DOCTYPE html>
<html>
  <head>
    <title>Socket.IO chat</title>
    <style>
      body { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; 
      background-color: #ffffff;}

      #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; 
      height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
      #input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
      #input:focus { outline: none; }
      #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; 
      border-radius: 3px; outline: none; color: rgb(255, 255, 255); }

      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages > li { padding: 0.5rem 1rem; }
      #messages > li:nth-child(odd) { background: #c4f1d9; }
      .author1 { background-color: #c4f1d9; }
      .author2 { background-color: #ffffff; }
      p { padding-left: 2rem; }
      .headContent {font-weight: bold; padding-left: 1rem; }
    </style>
  </head>
  <body>
    <ul id="messages">
  
      <% for (const message of locals.messages) {%>
        <% if (locals.author_conversation === message.sender_id) {%>
          <div class="author1">
            <div class="headContent"> <%= message.author %> , <%= message.created_at %></div>
            <p> <%= message.content%> </p>
          </div>
        <%} else {%>
            <div class="author2">
              <div class="headContent"> <%= message.author %> , <%= message.created_at %></div>
              <p> <%= message.content %> </p>
            </div>
          <%}%>
      <%}%>
    </ul>
    <form id="form" action="" method="POST">
      <input id="input" autocomplete="off"/><button>Send</button>
    </form>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      
      const app = {
        socket: io(),
        messages: document.getElementById('messages'),
        form: document.getElementById('form'),
        input: document.getElementById('input'),
        
        init(){
          app.form.addEventListener('submit', app.drawMessage);
          
          app.socket.on('chat message', function(msg) {
            const headItem = document.createElement('div');
            headItem.textContent = "yo";
            app.messages.appendChild(headItem);
            const item = document.createElement('p');
            item.textContent = msg;
            app.messages.appendChild(item);
            window.scrollTo(0, document.body.scrollHeight);
          });
          
        },
        
        async drawMessage(e){
          e.preventDefault();
          let data = app.input.value;
          console.log(data);
          if (app.input.value) {
            app.postMessage(data);
            app.socket.emit('chat message', app.input.value);
            app.input.value = '';
          }
        },
        
        async postMessage(data){
          try {
            console.log(data);
            let response = await fetch('http://localhost:3000/messages/2', 
              {
                method: 'POST',
                body: data
              },
              headers = {
              authorization: token,
              Accept: "application/json",
              "Content-Type": "application/json",
              }
            );
            console.log(response);
            let messages = await response.json();
            console.log(messages);
            return console.log(messages);
            
          } catch (error) {
            console.error(error);
          }
        }
        
      };


      document.addEventListener('DOMContentLoaded', app.init);
      
      </script>
  </body>
  </html>